image: 
  name: hashicorp/packer:full
  entrypoint: [""]

variables:
  DIGITAL_O: '/token/gitlab/digitalocean'
  CICD_TOK_SSM: 'cicdtoken'
  VERSION_SSM: '/nextjs-app/version'
  CISD_USER_SSM: '/cicd/user'
  GIT_REPO: /aws/nextjsapp.git
  GITL_DOMAIN: /gitlab/domain

stages:
  - build



before_script:
  - |
    cat /etc/os-release
    apk update
    apk upgrade 
    apk add openssh-client
    apk add ansible
    apk add --no-cache aws-cli
    apk add --no-cache git
    export CICD_TOKEN=$(aws ssm get-parameter --name "${CICD_TOK_SSM}"  --query 'Parameter.Value' --output text)
    export VERSION=$(aws ssm get-parameter --name "${VERSION_SSM}"  --query 'Parameter.Value' --output text)
    export CICD_USER=$(aws ssm get-parameter --name "${CISD_USER_SSM}"  --query 'Parameter.Value' --output text)
    export DIGITALOCEAN_TOKEN=$(aws ssm get-parameter --name "${DIGITAL_O}"  --query 'Parameter.Value' --output text)
    export GITLAB_DOMAIN=$(aws ssm get-parameter --name "${GITL_DOMAIN}"  --query 'Parameter.Value' --output text)
    export REPO_URL="http://$CICD_USER:$CICD_TOKEN@$GITLAB_DOMAIN/$GIT_REPO"
    mkdir nj_repo
    git clone --branch $VERSION $REPO_URL nj_repo
    cd nj_repo
    export COMMIT_HASH=$(git rev-parse HEAD)
    cd ..
    echo "Updating group_vars/all.yml with the fetched ..."
    sed -i "s|personal_access_token:.*|personal_access_token: $CICD_TOKEN|" ./ansible/group_vars/all.yml
    sed -i "s|version:.*|version: $COMMIT_HASH|" ./ansible/group_vars/all.yml  
    sed -i "s|username:.*|username: $CICD_USER|" ./ansible/group_vars/all.yml
    sed -i "s|app_rep:.*|app_rep: $REPO_URL|" ./ansible/group_vars/all.yml
    cat ./ansible/group_vars/all.yml
    packer --version
    packer plugins install github.com/digitalocean/digitalocean
  #- cp cicd ansible/files/cicd



build:
  stage: build
  script:
    - |
      echo "Running Packer"
      packer validate nextjs_ami.json
      packer build ./nextjs_snaphot.json | tee packer_output.log  # Save the output to a log file
      AMI_ID=$(grep -o 'ami-[a-zA-Z0-9]\+' packer_output.log | tail -n 1)  # Extract AMI ID from the log
      aws ssm put-parameter --name "/nextjs/ami-id" --value "$AMI_ID" --type "String" --overwrite
      echo $AMI_ID > ami_output.txt  # Save the AMI ID to a file
  artifacts:
    paths:
      - ami_output.txt  # Store the AMI ID as an artifact
  tags:
    - aws
